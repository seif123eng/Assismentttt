// <auto-generated />
using System;
using Assisment.AppDbContextsss;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assisment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assisment.Models.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("experience_years")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("coaches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flick",
                            Specialization = "Football",
                            experience_years = 15
                        },
                        new
                        {
                            Id = 2,
                            Name = "Maresca",
                            Specialization = "HandBall",
                            experience_years = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ibrahim",
                            Specialization = "VoleyBall",
                            experience_years = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ibrahim",
                            Specialization = "VoleyBall",
                            experience_years = 3
                        });
                });

            modelBuilder.Entity("Assisment.Models.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("competitions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Location = "America",
                            title = "World-Cup"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Location = "Morroco",
                            title = "Africa-Cup"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Location = "Qtar",
                            title = "Arab-Cup"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            Location = "France",
                            title = "Europe-Cup"
                        });
                });

            modelBuilder.Entity("Assisment.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("teamID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("teamID");

                    b.ToTable("players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Full_name = "Seif_Hamdy",
                            age = 18,
                            position = "CAM",
                            teamID = 2
                        },
                        new
                        {
                            Id = 2,
                            Full_name = "Afsha",
                            age = 30,
                            position = "CM",
                            teamID = 1
                        },
                        new
                        {
                            Id = 3,
                            Full_name = "Lamyen",
                            age = 18,
                            position = "RW",
                            teamID = 3
                        },
                        new
                        {
                            Id = 4,
                            Full_name = "Vivi",
                            age = 25,
                            position = "LW",
                            teamID = 4
                        });
                });

            modelBuilder.Entity("Assisment.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("coachID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("coachID")
                        .IsUnique();

                    b.ToTable("teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Al-Ahly",
                            city = "Egypt",
                            coachID = 4
                        },
                        new
                        {
                            Id = 2,
                            Name = "Barca",
                            city = "Spain",
                            coachID = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Liverpool",
                            city = "England",
                            coachID = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inter",
                            city = "Italy",
                            coachID = 1
                        });
                });

            modelBuilder.Entity("CompetitionTeam", b =>
                {
                    b.Property<int>("competitionsId")
                        .HasColumnType("int");

                    b.Property<int>("teamsId")
                        .HasColumnType("int");

                    b.HasKey("competitionsId", "teamsId");

                    b.HasIndex("teamsId");

                    b.ToTable("CompetitionTeam");
                });

            modelBuilder.Entity("Assisment.Models.Player", b =>
                {
                    b.HasOne("Assisment.Models.Team", "team")
                        .WithMany("players")
                        .HasForeignKey("teamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("team");
                });

            modelBuilder.Entity("Assisment.Models.Team", b =>
                {
                    b.HasOne("Assisment.Models.Coach", "coach")
                        .WithOne("team")
                        .HasForeignKey("Assisment.Models.Team", "coachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coach");
                });

            modelBuilder.Entity("CompetitionTeam", b =>
                {
                    b.HasOne("Assisment.Models.Competition", null)
                        .WithMany()
                        .HasForeignKey("competitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assisment.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("teamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assisment.Models.Coach", b =>
                {
                    b.Navigation("team");
                });

            modelBuilder.Entity("Assisment.Models.Team", b =>
                {
                    b.Navigation("players");
                });
#pragma warning restore 612, 618
        }
    }
}
